
services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      network: host
    container_name: project-exchange-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_PATH=./data.db
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-jwt-key-change-this-in-production}
    volumes:
      - backend_data:/root/data.db
    restart: unless-stopped
    networks:
      - dokploy-network
    

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      network: host
    container_name: project-exchange-frontend
    expose:
      - 3000
    environment:
      - NODE_ENV=production
      - PORT=3000
      - BACKEND_URL=http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project-exchange-frontend-http.rule=Host(`0sokrat0.ru`)"
      - "traefik.http.routers.project-exchange-frontend-http.entrypoints=web"
      - "traefik.http.routers.project-exchange-frontend-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.project-exchange-frontend.rule=Host(`0sokrat0.ru`)"
      - "traefik.http.routers.project-exchange-frontend.entrypoints=websecure"
      - "traefik.http.routers.project-exchange-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.project-exchange-frontend.loadbalancer.server.port=3000"


networks:
  dokploy-network:
    external: true