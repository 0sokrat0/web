version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: project-exchange-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      network: host
    container_name: project-exchange-backend
    expose:
      - 8080
    environment:
      - PORT=8080
      - DB_PATH=./data.db
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-jwt-key-change-this-in-production}
    volumes:
      - backend_data:/root/data.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      network: host
    container_name: project-exchange-frontend
    expose:
      - 3000
    environment:
      - NODE_ENV=production
      - PORT=3000
      - BACKEND_URL=http://backend:8080/api
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

volumes:
  backend_data:
    driver: local

networks:
  app-network:
    driver: bridge
